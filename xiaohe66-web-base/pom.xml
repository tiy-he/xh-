<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>xiaohe66-web</artifactId>
        <groupId>com.xiaohe66.web</groupId>
        <version>1.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>xiaohe66-web-base</artifactId>
    <version>1.0</version>
    <packaging>war</packaging>

    <build>
        <!-- 模块名称 -->
        <finalName>${project.artifactId}-${project.version}</finalName>

        <!-- 资源文件目录,使用过滤器 -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <!--把class打包jar放到lib目录-->

                    <!--
                        该配置的值为true|false，默认是false。表示是否将class进行打包。
                        正常情况下war类型的工程，java代码编译后的类文件会放到WEB-INF/classes目录下面，散装。
                        当该参数配置为true时，会将所有的class打包为一个jar，jar的名字与war的名字一致（除了后缀）。
                        然后把这个jar放到WEB-INF/lib目录下，此时WEB-INF/classes目录下是空的
                    -->
                    <archiveClasses>true</archiveClasses>

                    <!--

                    该配置的值为true|false，默认是false。表示在发布war包的时候是否同时发布一个jar包（只有classes，不包含页面相关文件）。
                    正常情况下war类型的工程，当我们执行install或者deploy的时候build出一个war包，安装到本地或者发布到远程。
                    当该参数配置为true时，除了war包外还会多出一个jar包，不过该jar包的classifier默认为classes

                    -->

                    <attachClasses>true</attachClasses>

                    <!-- 复制war包资源时排除的资源，有多个时用逗号，支持*。(不能排除maven依赖的jar包和资源) -->
                    <warSourceExcludes>WEB-INF/lib/*,WEB-INF/web.xml</warSourceExcludes>
                    <!-- 打成war包前，需要排除的资源，在warSourceExcludes后面执行 -->
                    <packagingExcludes>WEB-INF/lib/*,WEB-INF/web.xml</packagingExcludes>
                </configuration>
            </plugin>

            <!--<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>install</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <packaging>jar</packaging>
                            <artifactId>${project.artifactId}</artifactId>
                            <groupId>${project.groupId}</groupId>
                            <version>${project.version}</version>
                            <file>${project.build.directory}/${project.artifactId}-${project.version}.jar</file>
                        </configuration>
                    </execution>
                </executions>
            </plugin>-->

        </plugins>

    </build>

    <dependencies>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- log4j start -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>
        <!-- log4j end -->

        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
        </dependency>

        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-web</artifactId>
        </dependency>

        <!--jstl-->
        <dependency>
            <groupId>jstl</groupId>
            <artifactId>jstl</artifactId>
        </dependency>

    </dependencies>

</project>