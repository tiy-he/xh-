<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 启用shrio授权注解拦截方式 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- 装配 securityManager -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 登陆成功后的一面 -->
        <!--<property name="successUrl" value="redirect:/sys/notLoggedIn"/>-->
        <!-- 身份验证失败，跳转的页面 -->
        <!--<property name="loginUrl" value="redirect:/sys/notLoggedIn"/>-->
        <!--<property name="loginUrl" value="/sys/notLoggedIn"/>-->
        <property name="loginUrl" value="/org/usr/register"/>
        <!-- 权限认证失败，跳转的页面 -->
        <property name="unauthorizedUrl" value="/sys/notPermission"/>
        <!-- 自定义过滤器 -->
        <property name="filters">
            <map>
                <entry key="http">
                    <bean class="com.xiaohe66.web.code.security.auth.shrio.HttpMethodAuthorizationFilter"/>
                </entry>
            </map>
        </property>

        <!-- 具体配置需要拦截哪些 URL, 以及访问对应的 URL 时使用 Shiro 的什么 Filter 进行拦截.  -->
        <property name="filterChainDefinitions">
            <value>
                <!--
                 前面的优先级高

                 游客        anon	             org.apache.shiro.web.filter.authc.AnonymousFilter
                 需要登录    authc	             org.apache.shiro.web.filter.authc.FormAuthenticationFilter
                            authcBasic	         org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter
                            logout	             org.apache.shiro.web.filter.authc.LogoutFilter
                            noSessionCreation	 org.apache.shiro.web.filter.session.NoSessionCreationFilter
                            perms	             org.apache.shiro.web.filter.authz.PermissionsAuthorizationFilter
                            port	             org.apache.shiro.web.filter.authz.PortFilter
                            rest	             org.apache.shiro.web.filter.authz.HttpMethodPermissionFilter
                            roles	             org.apache.shiro.web.filter.authz.RolesAuthorizationFilter
                            ssl	                 org.apache.shiro.web.filter.authz.SslFilter
                        orguser	             org.apache.shiro.web.filter.authc.UserFilter
                -->

                /admin/** = roles[photoAdmin]
                /** = anon

            </value>
        </property>
    </bean>

    <!--  自定义Realm -->
    <bean id="xhDefaultRealm" class="com.xiaohe66.web.code.security.realm.XhDefaultRealm"/>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="xhDefaultRealm"/>
    </bean>

    <!-- 配置 Bean 后置处理器: 会自动的调用和 Spring 整合后各个组件的生命周期方法. -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- 开启shiro注解，不能和spring 的代理一起开启 -->
    <!--<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>-->

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

</beans>